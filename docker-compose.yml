version: '3.8'
services:
  backend:
    build:
      context: .
    ports:
      - "8081:8081"
    networks:
      - dms-network
    depends_on:
      - rabbitmq
      - postgres
      - minio

  frontend:
    build:
      context: ./web-ui
    ports:
      - "80:80"
    networks:
      - dms-network
    depends_on:
      - backend

  postgres:
    image: postgres:14
    container_name: documentDB
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: documents_db
    ports:
      - "5432:5432"
    networks:
      - dms-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"  # For RabbitMQ management UI
      - "5672:5672"    # For client connections to RabbitMQ
    networks:
      - dms-network

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: "minioaccesskey"  # MinIO Access Key
      MINIO_ROOT_PASSWORD: "miniosecretkey"  # MinIO Secret Key
    ports:
      - "9000:9000"  # MinIO API port
      - "9090:9090"  # MinIO Console port (changed to 9090)
    command: server /data --console-address ":9090"  # Custom console address
    networks:
      - dms-network

  worker:
    build: worker/
    container_name: workerContainer
    restart: no
    ports:
      - "8082:8082"
    depends_on:
      - rabbitmq
      - minio
    networks:
      - dms-network

networks:
  dms-network:
    driver: bridge

volumes:
  minio_data:  # Volume for MinIO to store files
